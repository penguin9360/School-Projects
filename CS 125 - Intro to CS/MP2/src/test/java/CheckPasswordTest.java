import java.util.LinkedHashMap;
import java.util.Map;

import org.testng.Assert;
import org.testng.annotations.Test;

/**
 * Test suite for the CheckPassword class.
 * <p>
 * The provided test suite is correct and complete. You should not need to modify it. However, you
 * should understand it. You will need to augment or write test suites for later MPs.
 *
 * @see <a href="https://cs125.cs.illinois.edu/MP/2/">MP2 Documentation</a>
 */
public class CheckPasswordTest {

    /**
     * Timeout for our tests. Solution takes 54 ms.
     */
    private static final int TEST_TIMEOUT = 540;

    /**
     * Test with precomputed values.
     */
    @Test(timeOut = TEST_TIMEOUT)
    public void testCheckPassword() {
        for (Map.Entry<CheckPasswordInput, Boolean> precomputed : PRECOMPUTED_RESULTS.entrySet()) {
            CheckPasswordInput input = precomputed.getKey();
            Boolean output = precomputed.getValue();

            Assert.assertEquals(CheckPassword.checkPassword(input.password,
                    input.minLength, input.minLetter, input.minNumber, input.minSpecial), (boolean) output,
                    "Incorrect result for " + input);
        }
    }

    public static class CheckPasswordInput {
        /** Password to check. */
        final String password;

        /** Minimum password length. */
        final int minLength;

        /** Minimum password letter count. */
        final int minLetter;

        /** Minimum password number count.*/
        final int minNumber;

        /** Minimum password special character count. */
        final int minSpecial;

        @Override
        public String toString() {
            return "CheckPasswordInput{" +
                    "password='" + password + '\'' +
                    ", minLength=" + minLength +
                    ", minLetter=" + minLetter +
                    ", minNumber=" + minNumber +
                    ", minSpecial=" + minSpecial +
                    '}';
        }

        public CheckPasswordInput(String password, int minLength, int minLetter, int minNumber, int minSpecial) {
            this.password = password;
            this.minLength = minLength;
            this.minLetter = minLetter;
            this.minNumber = minNumber;
            this.minSpecial = minSpecial;
        }
    }
    /**
     * Pre-computed testing values.
     */
    private static final Map<CheckPasswordInput, Boolean> PRECOMPUTED_RESULTS =
            new LinkedHashMap<>() {
                {
                    put(new CheckPasswordInput("",
                            0, 0, 0, 0), true);
                    put(new CheckPasswordInput("",
                            1, 0, 0, 0), false);
                    put(new CheckPasswordInput("",
                            0, 1, 0, 0), false);
                    put(new CheckPasswordInput("",
                            0, 0, 1, 0), false);
                    put(new CheckPasswordInput("",
                            0, 0, 0, 1), false);
                    put(new CheckPasswordInput("t",
                            1, 1, 0, 0), true);
                    put(new CheckPasswordInput("u",
                            1, 0, 1, 0), false);
                    put(new CheckPasswordInput("v",
                            1, 0, 0, 1), false);
                    put(new CheckPasswordInput("w",
                            2, 0, 0, 0), false);
                    put(new CheckPasswordInput("1",
                            1, 0, 1, 0), true);
                    put(new CheckPasswordInput("2",
                            1, 1, 0, 0), false);
                    put(new CheckPasswordInput("3",
                            1, 0, 0, 1), false);
                    put(new CheckPasswordInput("4",
                            2, 0, 0, 0), false);
                    put(new CheckPasswordInput("!",
                            1, 0, 0, 1), true);
                    put(new CheckPasswordInput("$",
                            1, 1, 0, 0), false);
                    put(new CheckPasswordInput("@",
                            1, 0, 1, 0), false);
                    put(new CheckPasswordInput("#",
                            2, 0, 0, 0), false);
                    /* BEGIN AUTOGENERATED CODE */
                    put(new CheckPasswordInput("oGo3nKIFRpfqaJa$TGbFhPMiG",
                            24, 22, 1, 0), true);
                    put(new CheckPasswordInput("Gu4eVT$LY3WF12BRKJd9B*1XmF0Hisuuh@s#FahH%d0ks9$oMBlphJIrMU^%Q8YU",
                            64, 46, 10, 10), false);
                    put(new CheckPasswordInput("a3Z4@HNOUs1a2J&#bfyu5sjyU1Q#$7H1iy^CMuHV1mG3SsB3FN2@t",
                            53, 34, 11, 6), true);
                    put(new CheckPasswordInput("kwHxc##!l$705x0zgoHDIqS0Q",
                            23, 14, 4, 2), true);
                    put(new CheckPasswordInput("B3Fvz!XChUsR&HAo!FcTP7*p!p$r2nL5xlOsZcX$4#J*kqxJI3nu!urcVv@D8",
                            60, 41, 6, 10), true);
                    put(new CheckPasswordInput("YH@hPqXXIU59H01YPlyPi",
                            19, 16, 4, 0), true);
                    put(new CheckPasswordInput("sP^iY5QkCkzd9IH0P4MNEm#popQkAiGVa8vNqcQeiWa@",
                            42, 36, 5, 1), true);
                    put(new CheckPasswordInput("jLU!1BWz6#bJu5Yu86SyToOsRZmMxk@wUC6aS%Q!e5mIv26gP",
                            49, 35, 9, 9), false);
                    put(new CheckPasswordInput("Nbw*QH2p2*b&",
                            11, 5, 0, 1), true);
                    put(new CheckPasswordInput("AMf8C0Vux1OwtjjzwGgsBD9ClgN0A",
                            28, 24, 4, 0), true);
                    put(new CheckPasswordInput("37fE4gDg6obGKWrmItSXNZycKNrA%l9bDhNEN#2WNMpyiMAv",
                            51, 40, 6, 2), false);
                    put(new CheckPasswordInput("PEY8djgnJcND8OIJcePgAs8VuVxFYA#S35Oun9!9yZh!dVNLT6N5a8pCs2&8",
                            60, 44, 13, 4), false);
                    put(new CheckPasswordInput("n1PaXNUhOBHr1aWlBqYni@1v!yK%RLh",
                            31, 24, 1, 1), true);
                    put(new CheckPasswordInput("QhhptQx6fYkOL5JACT5Zo@ej*bc!yIrdD5A!I@qA9H%siSuK52coXR0@PyWN1S2k",
                            64, 49, 10, 7), false);
                    put(new CheckPasswordInput("pnjhiRn*q%xw8Vg2AQ0rKfQU@dOo*1BjUsOz0$ZxA$S",
                            43, 33, 5, 6), false);
                    put(new CheckPasswordInput("eO*Rrr%F9y%NZDDXZncjo@gx0YYlk*V54YGI$L!SSC6$tLGLD#%uc@n7x1ZPGf$V",
                            64, 45, 7, 10), true);
                    put(new CheckPasswordInput("x1mo6%@tKt@RTdXAIeZtbdF7QCbwFC7bi7twH2l*CsmU2",
                            44, 32, 7, 2), true);
                    put(new CheckPasswordInput("W!V&GScoxq8v#eSS",
                            17, 12, 1, 3), false);
                    put(new CheckPasswordInput("H4IhpvPfjeQ^batMdQ$MvWQJanv",
                            25, 23, 0, 2), true);
                    put(new CheckPasswordInput("FlXSec2%",
                            6, 6, 1, 0), true);
                    put(new CheckPasswordInput("sUFeRLZp9UDzfj7@Hp9Za5ofm5CwgqW7rN",
                            34, 29, 6, 1), false);
                    put(new CheckPasswordInput("qn4g2Lua8sg0ko$VO9m*",
                            20, 12, 3, 0), true);
                    put(new CheckPasswordInput("KuvimuACjawHAt*wrr@vHv4B1sq",
                            27, 23, 1, 2), true);
                    put(new CheckPasswordInput("B#TmgLAxw5r47e@BOKR",
                            19, 16, 3, 2), false);
                    put(new CheckPasswordInput("Mt43K5!iJXSxLR6LKwUxAMp3O%5jJ",
                            29, 21, 6, 6), false);
                    put(new CheckPasswordInput("wNt1nEOpu^w5&$oU*KLZZD3stigMI%kusqARd!xdF%tDD!gvx3PObmVC65",
                            57, 44, 5, 8), true);
                    put(new CheckPasswordInput("Or1XPe9V$m3fhk2HaSJEXQQPSbCSDr!&*TbssYJir5SyKuyXbZkEQu5ZZAv^7X",
                            61, 50, 5, 5), true);
                    put(new CheckPasswordInput("YHBQgvxBAX0NehNcT$&qb^FO6Wf3@aPHxlU%J&nL*UNUO&QEs",
                            49, 41, 3, 8), false);
                    put(new CheckPasswordInput("POo430FVHM&SXfv0q2yZ!gzF$idLILMn#",
                            33, 26, 5, 4), false);
                    put(new CheckPasswordInput("LgjtdSDXHzhV",
                            12, 16, 0, 0), false);
                    put(new CheckPasswordInput("koaQTfA&Zy",
                            10, 9, 0, 5), false);
                    put(new CheckPasswordInput("GAhJjp@1YrCQWS5j&4xJp@n0ycH0gFiXhRdsgO7I^mSLRhr39V$$rDwHU@xW",
                            60, 45, 12, 7), false);
                    put(new CheckPasswordInput("gHGKLY6$9lq",
                            9, 6, 2, 0), true);
                    put(new CheckPasswordInput("S0$ntylt07RYuE^%gFiyD1DVxeK",
                            27, 20, 4, 6), false);
                    put(new CheckPasswordInput("mOb^c9Eyjc81y9zh&MtpIIdpW1@tAF&N&5eanM",
                            41, 27, 6, 5), false);
                    put(new CheckPasswordInput("kV!Jegbb!Lx6jDzuf",
                            17, 14, 0, 2), true);
                    put(new CheckPasswordInput("#Fb2E&&Y2!3HBuiprf^Ny$bAeNI6YP!Cd$CP",
                            35, 23, 4, 6), true);
                    put(new CheckPasswordInput("sQcQ^BhaJA*kMF3q%x%g",
                            20, 15, 1, 5), false);
                    put(new CheckPasswordInput("3NX2nsIU#pTpGPv*VQ7%wz9ZAZs%MOKn&cND@5U",
                            39, 28, 6, 6), false);
                    put(new CheckPasswordInput("!1*35E%xNr*ZLwJqn",
                            15, 8, 1, 4), true);
                    put(new CheckPasswordInput("jFCF^%&WK$yRsCM2e",
                            17, 13, 1, 4), false);
                    put(new CheckPasswordInput("j*mR4NCrgYIo*YMYA62OpTQaoxKUeA5Eh",
                            33, 31, 4, 2), false);
                    put(new CheckPasswordInput("L0P1uHcwani6x#gE@!kP9kSF*jxA6cGukk77trO2yLE*uPFrB#^o$e&dfGXe",
                            64, 43, 8, 9), false);
                    put(new CheckPasswordInput("x#C*iIG%xnJ00!FiL@#6ip!#bAYGW0Ki78urFS!582jz6A!hpCltswy!dEFLUj",
                            60, 40, 8, 10), true);
                    put(new CheckPasswordInput("#7k$@%ahF6f",
                            10, 3, 1, 4), true);
                    put(new CheckPasswordInput("Qmz1lGqZx!n",
                            11, 12, 1, 1), false);
                    put(new CheckPasswordInput("jm7kDwgD4tL5nVKOw8H",
                            18, 13, 2, 0), true);
                    put(new CheckPasswordInput("%0S4$gUET57xn79G02%1lktailm2C*",
                            33, 16, 10, 4), false);
                    put(new CheckPasswordInput("XvrD9dxO$ZlyV9TTg*1&avl03te$TdBXiqJ6bD!b&3UL&%Q#QpPluj$L@MSLnK8",
                            61, 44, 6, 9), true);
                    put(new CheckPasswordInput("grfaocF%zOlpnu0tPwpZf3YasZBLh%Gny",
                            33, 29, 2, 6), false);
                    put(new CheckPasswordInput("c!tMJiiEGJzhAb1",
                            13, 12, 1, 0), true);
                    put(new CheckPasswordInput("rs%Oz1G#UhLF%BJ50fb0z4vQN6Yj%COPpO1Cpj8VP4xbVp0gi*MJ3",
                            52, 35, 11, 5), true);
                    put(new CheckPasswordInput("S!d7IMJctUH^cz4&BrsK",
                            18, 15, 2, 2), true);
                    put(new CheckPasswordInput("mrouTCdaFB8TANM2As0RwGHv",
                            24, 25, 3, 0), false);
                    put(new CheckPasswordInput("WIjQ2ThyZoqY#n5%78d5wrEF7hiZQ!OXf8%Fyh!6w79fSrTHP3bU",
                            52, 39, 11, 5), false);
                    put(new CheckPasswordInput("jYJP&M7Le3aiU2oyhm%lE6SmFNr0&z*Y^qoO2vfOjB4PIy#N2pU&smXrYaiO9",
                            59, 45, 7, 7), true);
                    put(new CheckPasswordInput("DVpfdKqRXK*3Nd^V9CL$DRm",
                            23, 18, 2, 6), false);
                    put(new CheckPasswordInput("iOoXlVC!2WqRvfZ9VnFGGEJ3tK#1njDtqAS6ryXGVW8rGXgrdwERpKJoasuZiZ",
                            62, 54, 6, 5), false);
                    put(new CheckPasswordInput("NwU52ij$N*tsLe@4^q2TY12AukHIKixzwauL8^X",
                            39, 27, 6, 3), true);
                    put(new CheckPasswordInput("E1Zd62TPt6irUWT0YfajsNXq",
                            22, 19, 3, 0), true);
                    put(new CheckPasswordInput("%EfBEJUndxr7T97aUW&EDOZjXKKcO^1ZCia6620lIX",
                            40, 30, 8, 3), true);
                    put(new CheckPasswordInput("*6b^qB@dhFKJWahBOLRkpd3BzRCVK95*FCsWE",
                            37, 28, 3, 4), true);
                    put(new CheckPasswordInput("BtGvbSl6yFl6OMQPANaVZmzzumEfV",
                            29, 27, 5, 0), false);
                    put(new CheckPasswordInput("@cr@W*SMtTD$J3GDnOBLxNsotAq#pQy3&Bk!KCT2%a&T",
                            43, 31, 1, 7), true);
                    /* END AUTOGENERATED CODE */
                }
            };
}
